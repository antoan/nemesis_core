<launch>
     <arg name="device_type_camera1"    		default="t265"/>
    <arg name="device_type_camera2"    		default="d4.5"/>	<!-- Note: using regular expression. match D435, D435i, D415... -->
    <arg name="serial_no_camera1"    			default=""/>
    <arg name="serial_no_camera2"    			default=""/>
    <arg name="camera1"              			default="t265"/>		<!-- Note: Replace with camera name -->
    <arg name="camera2"              			default="d435i"/>		<!-- Note: Replace with camera name -->
    <arg name="clip_distance"             default="-2"/>
    <arg name="use_rviz"                  default="false"/>
    <arg name="use_rtabmapviz"            default="false"/>

    <!-- Localization-only mode -->
  <arg name="localization"      default="false"/>
  <arg     if="$(arg localization)" name="rtabmap_args"  default=""/>
  <arg unless="$(arg localization)" name="rtabmap_args"  default="--delete_db_on_start"/>




    <include file="$(find nemesis_description)/launch/description.launch"/>

     <include file="$(find nemesis_navigation)/launch/rs_t265_and_d435i.launch">
            <arg name="device_type_camera1"             value="$(arg device_type_camera1)"/>
            <arg name="device_type_camera2"             value="$(arg device_type_camera2)"/>
            <arg name="serial_no_camera1"               value="$(arg serial_no_camera1)"/>
            <arg name="serial_no_camera2"               value="$(arg serial_no_camera2)"/>
            <arg name="camera1"                         value="$(arg camera1)"/>
            <arg name="camera2"                         value="$(arg camera2)"/>
            <arg name="clip_distance"                   value="$(arg clip_distance)"/>

    </include>

<include file="$(find nemesis_navigation)/launch/rtabmap.launch">
            <arg name="rtabmap_args"       value="--Mem/UseOdomGravity true --Optimizer/GravitySigma 0.3 --Optimizer/Strategy 2 --Optimizer/Robust true --RGBD/OptimizeMaxError 0 --Reg/Force3DoF true --Optimizer/Slam2D true"/>
            <arg name="depth_topic"        value="/$(arg camera2)/aligned_depth_to_color/image_raw"/>
            <arg name="frame_id"           value="base_footprint"/>
            <arg name="rgbd_sync"          value="true"/>
            <arg name="approx_rgbd_sync"   value="false"/>
            <arg name="odom_topic"         value="/$(arg camera1)/odom/sample"/>
            <arg name="rgb_topic"          value="/$(arg camera2)/color/image_raw"/>
            <arg name="camera_info_topic"  value="/$(arg camera2)/color/camera_info"/>
            <arg name="queue_size"         value="200"/>
            <arg name="rviz"               value="$(arg use_rviz)"/>
            <arg name="rtabmapviz"         value="$(arg use_rtabmapviz)"/>
            <arg name="visual_odometry"    value="false"/>
    </include>




 <!-- ROS navigation stack move_base -->
  <group ns="planner">

     <remap from="obstacles_cloud" to="/obstacles_cloud"/>
     <remap from="ground_cloud" to="/ground_cloud"/>
     <remap from="map" to="/map"/>
     <remap from="move_base_simple/goal" to="/planner_goal"/>
     <node pkg="move_base" type="move_base" respawn="true" name="move_base" output="screen">
        <param name="base_global_planner" value="navfn/NavfnROS"/>
    	<rosparam file="$(find nemesis_navigation)/config/costmap_common.yaml" command="load" ns="global_costmap"/>
     	<rosparam file="$(find nemesis_navigation)/config/costmap_common.yaml" command="load" ns="local_costmap" />
    	<rosparam file="$(find nemesis_navigation)/config/costmap_local.yaml" command="load" ns="local_costmap" />
    	<rosparam file="$(find nemesis_navigation)/config/costmap_global.yaml" command="load" ns="global_costmap"/>
    	<rosparam file="$(find nemesis_navigation)/config/planner.yaml" command="load" />
     </node>

  </group>

<!-- for the planner -->

    <node pkg="nodelet" type="nodelet" name="points_xyz_planner" args="load rtabmap_ros/point_cloud_xyz camera_nodelet_manager">
      <remap from="depth/image"            to="/$(arg camera2)/aligned_depth_to_color/image_raw"/>
      <remap from="depth/camera_info"      to="/$(arg camera2)/aligned_depth_to_color/camera_info"/>
      <remap from="cloud"                  to="cloudXYZ" />
      <param name="decimation" type="int" value="1"/>
      <param name="max_depth"  type="double" value="3.0"/>
      <param name="voxel_size" type="double" value="0.02"/>
    </node>

    <node pkg="nodelet" type="nodelet" name="obstacles_detection" args="load rtabmap_ros/obstacles_detection camera_nodelet_manager">
      <remap from="cloud" to="cloudXYZ"/>
      <remap from="obstacles" to="/obstacles_cloud"/>
      <remap from="ground"    to="/ground_cloud"/>

      <param name="frame_id"             type="string" value="base_footprint"/>
      <param name="map_frame_id"         type="string" value="map"/>
      <param name="wait_for_transform"   type="bool" value="true"/>
      <param name="min_cluster_size"     type="int" value="20"/>
      <param name="max_obstacles_height" type="double" value="0.4"/>
    </node>


</launch>
